DROP TABLE dishes IF EXISTS;
DROP TABLE users IF EXISTS;
DROP TABLE user_roles IF EXISTS;
DROP TABLE restaurants IF EXISTS;
DROP TABLE menu_items IF EXISTS;
DROP TABLE votes IF EXISTS;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ AS INTEGER START WITH 100000;

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL
);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);

CREATE TABLE dishes
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  description      VARCHAR(255)            NOT NULL,
  price            INTEGER                 NOT NULL
);

CREATE TABLE restaurants
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL
);

CREATE TABLE menu_items
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  dish_id          INTEGER      NOT NULL,
  restaurant_id    INTEGER      NOT NULL,
  added            TIMESTAMP    NOT NULL,
  FOREIGN KEY (dish_id) REFERENCES DISHES (id) ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id) ON DELETE CASCADE
);

CREATE TABLE votes
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  user_id          INTEGER      NOT NULL,
  restaurant_id    INTEGER      NOT NULL,
  taken            TIMESTAMP    NOT NULL,
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE,
  FOREIGN KEY (restaurant_id) REFERENCES RESTAURANTS (id) ON DELETE CASCADE
);
CREATE UNIQUE INDEX votes_unique_user_id_idx ON VOTES (user_id);

-- CREATE UNIQUE INDEX meals_unique_user_datetime_idx ON meals (user_id, date_time)